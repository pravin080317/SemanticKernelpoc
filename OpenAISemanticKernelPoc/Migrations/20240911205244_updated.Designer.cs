// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenAISemanticKernelPoc.Services;

#nullable disable

namespace OpenAISemanticKernelPoc.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240911205244_updated")]
    partial class updated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OpenAISemanticKernelPoc.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("StudentAge");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FullName");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("OpenAISemanticKernelPoc.Models.Variety", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Varietyy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("Varietys");
                });

            modelBuilder.Entity("OpenAISemanticKernelPoc.Models.export", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CrBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Last")
                        .HasColumnType("datetime2");

                    b.Property<long>("PID")
                        .HasColumnType("bigint");

                    b.Property<int>("Preview")
                        .HasColumnType("int");

                    b.Property<string>("Prod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpBY")
                        .HasColumnType("int");

                    b.Property<long?>("VID")
                        .HasColumnType("bigint");

                    b.Property<string>("Varietyy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("perma")
                        .HasColumnType("bit");

                    b.Property<int>("regulat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("exports");
                });

            modelBuilder.Entity("OpenAISemanticKernelPoc.Models.product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Prod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("OpenAISemanticKernelPoc.Models.Variety", b =>
                {
                    b.HasOne("OpenAISemanticKernelPoc.Models.product", null)
                        .WithMany("vas")
                        .HasForeignKey("productId");
                });

            modelBuilder.Entity("OpenAISemanticKernelPoc.Models.product", b =>
                {
                    b.Navigation("vas");
                });
#pragma warning restore 612, 618
        }
    }
}
